@charset "UTF-8";

.bg-primary {
  background-color: #0d6efd;
  color: #050505;
}

.grid {
  display: grid;
}

@media (min-width: 768px) {
  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
  @keyframes fadeInLeft {
    from {
      opacity: 0;
      transform: translate3d(-100%, 0, 0);
    }
    to {
      opacity: 1;
      transform: translate3d(0, 0, 0);
    }
  }
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translate3d(0, 100%, 0);
    }
    to {
      opacity: 1;
      transform: translate3d(0, 0, 0);
    }
  }
  @keyframes fadeInRight {
    from {
      opacity: 0;
      transform: translate3d(100%, 0, 0);
    }
    to {
      opacity: 1;
      transform: translate3d(0, 0, 0);
    }
  }
  @keyframes fadeInDown {
    from {
      opacity: 0;
      transform: translate3d(0, -100%, 0);
    }
    to {
      opacity: 1;
      transform: translate3d(0, 0, 0);
    }
  }
  @keyframes jello-horizontal {
    0% {
      transform: scale3d(1, 1, 1) translateX(-50%);
    }
    30% {
      transform: scale3d(1.25, 0.75, 1) translateX(-50%);
    }
    40% {
      transform: scale3d(0.75, 1.25, 1) translateX(-50%);
    }
    50% {
      transform: scale3d(1.15, 0.85, 1) translateX(-50%);
    }
    65% {
      transform: scale3d(0.95, 1.05, 1) translateX(-50%);
    }
    75% {
      transform: scale3d(1.05, 0.95, 1) translateX(-50%);
    }
    100% {
      transform: scale3d(1, 1, 1) translateX(-50%);
    }
  }
  @keyframes fadeInUp--xs {
    0% {
      opacity: 0;
      transform: translateY(20px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }
  @keyframes fadeInLeft--xs {
    0% {
      opacity: 0;
      transform: translateX(-20px);
    }
    100% {
      opacity: 1;
      transform: translateX(0);
    }
  }
  @keyframes fadeInRight--xs {
    0% {
      opacity: 0;
      transform: translateX(20px);
    }
    100% {
      opacity: 1;
      transform: translateX(0);
    }
  }
  @keyframes fadeInDown--xs {
    0% {
      opacity: 0;
      transform: translateY(-20px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }
}
.grid-col4--md {
  grid-template-columns: repeat(auto-fit, minmax(clamp(100% / (4 + 1) + 0.1%, 22.8rem, 100%), 1fr));
}
.grid-gap--sm {
  grid-gap: 1.6rem;
}

.container {
  width: 100%;
  max-width: 140rem;
  padding: 0 1.6rem;
  margin: 0 auto;
}

/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */
/*
Document
========
*/
/*
Use a more readable tab size (opinionated).
*/
html {
  -moz-tab-size: 4;
  -o-tab-size: 4;
  tab-size: 4;
}

/*
1. Correct the line height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
*/
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/*
Sections
========
*/
/*
Remove the margin in all browsers.
*/
body {
  margin: 0;
}

/*
Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
*/
body {
  font-family: system-ui, -apple-system, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji";
}

/*
Grouping content
================
*/
/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
*/

/*
Text-level semantics
====================
*/
/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

/*
Add the correct font weight in Edge and Safari.
*/

/*
1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
2. Correct the odd 'em' font sizing in all browsers.
*/

/*
Add the correct font size in all browsers.
*/

/*
Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
*/

/*
Tabular data
============
*/
/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
*/

/*
Forms
=====
*/
/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
*/

/*
Remove the inheritance of text transform in Edge and Firefox.
1. Remove the inheritance of text transform in Firefox.
*/

/*
Correct the inability to style clickable types in iOS and Safari.
*/

/*
Remove the inner border and padding in Firefox.
*/
::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/*
Restore the focus styles unset by the previous rule.
*/

/*
Remove the additional ':invalid' styles in Firefox.
See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737
*/

/*
Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.
*/

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

/*
Remove the inner padding in Chrome and Safari on macOS.
*/
::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to 'inherit' in Safari.
*/
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Interactive
===========
*/
/*
Add the correct display in Chrome and Safari.
*/

/*
* Manually forked from SUIT CSS Base: https://github.com/suitcss/base
* A thin layer on top of normalize.css that provides a starting point more
* suitable for web applications.
*/
/*
* Removes the default spacing and border for appropriate elements.
*/

/*
* Tailwind custom reset styles
*/
/*
* 1. Use the user's configured `sans` font-family (with Tailwind's default
*    sans-serif font stack as a fallback) as a sane default.
* 2. Use Tailwind's default "normal" line-height so the user isn't forced
*    to override it to ensure consistency even when using the default theme.
*/
html {
  font-family: Roboto;
  /* 1 */
  line-height: 1.5;
  /* 2 */
}

/*
* Inherit font-family and line-height from `html` so users can set them as
* a class directly on the `html` element.
*/
body {
  font-family: inherit;
  line-height: inherit;
}

/*
* 1. Prevent padding and border from affecting element width.
*
*    We used to set this in the html element and inherit from
*    the parent element for everything else. This caused issues
*    in shadow-dom-enhanced elements like <details> where the content
*    is wrapped by a div with box-sizing set to `content-box`.
*
*    https://github.com/mozdevs/cssremedy/issues/4
*
*
* 2. Allow adding a border to an element by just adding a border-width.
*
*    By default, the way the browser specifies that an element should have no
*    border is by setting it's border-style to `none` in the user-agent
*    stylesheet.
*
*    In order to easily add borders to elements by just setting the `border-width`
*    property, we change the default border-style for all elements to `solid`, and
*    use border-width to hide them instead. This way our `border` utilities only
*    need to set the `border-width` property instead of the entire `border`
*    shorthand, making our border utilities much more straightforward to compose.
*
*    https://github.com/tailwindcss/tailwindcss/pull/116
*/
*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: currentColor;
  /* 2 */
}

/*
* Ensure horizontal rules are visible by default
*/

/*
* Undo the `border-style: none` reset that Normalize applies to images so that
* our `border-{width}` utilities have the expected effect.
*
* The Normalize reset is unnecessary for us since we default the border-width
* to 0 on all elements.
*
* https://github.com/tailwindcss/tailwindcss/issues/362
*/

/*
* Override legacy focus reset from Normalize with modern Firefox focus styles.
*
* This is actually an improvement over the new defaults in Firefox in our testing,
* as it triggers the better focus styles even for links, which still use a dotted
* outline in Firefox by default.
*/

/*
* Reset links to optimize for opt-in styling instead of
* opt-out.
*/

/*
* Reset form element properties that are easy to forget to
* style explicitly so you don't inadvertently introduce
* styles that deviate from your design system. These styles
* supplement a partial reset that is already applied by
* normalize.css.
*/

/*
* Use the configured 'mono' font family for elements that
* are expected to be rendered with a monospace font, falling
* back to the system monospace stack if there is no configured
* 'mono' font family.
*/

/*
* 1. Make replaced elements `display: block` by default as that's
*    the behavior you want almost all of the time. Inspired by
*    CSS Remedy, with `svg` added as well.
*
*    https://github.com/mozdevs/cssremedy/issues/14
* 
* 2. Add `vertical-align: middle` to align replaced elements more
*    sensibly by default when overriding `display` by adding a
*    utility like `inline`.
*
*    This can trigger a poorly considered linting error in some
*    tools but is included by design.
* 
*    https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210
*/

/*
* Constrain images and videos to the parent width and preserve
* their intrinsic aspect ratio.
*
* https://github.com/mozdevs/cssremedy/issues/14
*/

html {
  font-size: 62.5%;
}

body {
  font-size: 1.6rem;
  color: #050505;
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
}
@media (max-width: 767.98px) {
  body {
    font-size: 1.4rem;
  }
}

.toto {
  background-color: #0d6efd;
  height: 10rem;
}

/*# sourceMappingURL=style.css.map */
